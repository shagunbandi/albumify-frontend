{"version":3,"sources":["components/layout/loading1.gif","components/layout/Navbar.js","components/layout/NavBarOptions.js","components/folderView/FolderCard.js","actions/constants.js","actions/directoryAction.js","actions/types.js","components/folderView/DirectoryContainer.js","components/imageContainer/ImageCard.js","actions/galleryAction.js","components/imageContainer/ImageContainer.js","components/folderView/FileContainer.js","components/layout/Spinner.js","components/instructions/index.js","components/directory/DirectoryLanding.js","components/photos/PhotosLanding.js","actions/photosAction.js","components/galleryView/GalleryLanding.js","reducers/directoryReducer.js","reducers/photosReducer.js","reducers/galleryReducer.js","reducers/index.js","store.js","components/album/AlbumLanding.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","NavbarOptions","Link","to","FolderCard","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","selectSubDirectory","_this$props","props","folderData","isBackDir","addAlbum","selectSubDirectoryReducer","prevDir","split","slice","join","handleShow","inherits","createClass","key","value","folderName","onClick","Component","connect","state","BASE_URL","selectSubDirectoryGlobal","subDir","type","payload","setLoading","DirectoryContainer","handleClose","setState","showInputModal","err_msg","dir","reducerSubName","selectSubDirectoryGlobalPop","addAlbumAtPathReducer","path","name","addAlbumAtPath","addAlbumAtPathPop","saveAlbum","_this$props$directory","directory","currentDir","folder","albumNameValue","undefined","includes","console","log","backDir","_this2","prev","folerNameList","folderPathList","map","i","folderPath","_this3","_this$props$directory2","subFolders","getBackDir","getFolderPathList","content","folderView_FolderCard","push","index","addBut","class","role","for","ref","placeholder","id","data-dismiss","dispatch","axios","post","album_name","album_path","then","response","data","catch","err","ImageCard","showGalleryView","images","current","setGalleryComponents","show","_this$props2","image","loadedAnotherImage","selectThisImage","selectionMode","selectedImages","src","alt","onLoad","onError","loading","ImageContainer","imageCount","loadNextOn","loadMoreImages","indexOf","splice","CallAndShowDirectory","setLoadingPop","getAllAlbumsWithPathPopUp","showDirectory","addToAlbum","addFilesToAlbum","removeFiles","removeFromAlbum","currentDirAlbum","imagesLoaded","_this$state","metadata","nextProps","imageContainer_ImageCard","bind","from","folderView_DirectoryContainer","dataLoaded","photos","directory_pop","get","files","file_paths","FileContainer","file","imageContainer_ImageContainer","Spinner","spinner","style","width","margin","display","Instructions","target","rel","href","DirectoryLanding","getAllImagesWithPath","location","pathname","layout_Spinner","folderView_FileContainer","instructions","PhotosLanding","fetchImages","GalleryLanding","closeGallery","event","preventDefault","currentTarget","closeGalleryView","nextImage","next","setCurrentValue","prevImage","ArrowKeysReact","config","left","right","_this$props3","imageUrl","smallContent","imageURL","assign","events","tabIndex","gallery","initialState","text","rootDir","addAlbumResponse","combineReducers","action","objectSpread","root","current_directory","message","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","AlbumLanding","getAllAlbumsWithPath","App","es","HashRouter","layout_Navbar","NavBarOptions","galleryView_GalleryLanding","Route","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f5a2049.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading1.3f259006.gif\";","import React from 'react';\n\nfunction Navbar() {\n  return (\n\n    <nav className=\"navbar navbar-expand-lg navbar-dark justify-content-center bg-black\">\n      <span className=\"navbar-brand border-bottom-white big-text\">Albumify</span>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction NavbarOptions() {\n    return (\n\n        <nav className=\"navbar navbar-expand-lg navbar-light justify-content-center bg-black\">\n\n            <Link className=\"navbar-brand nav-item\" to=\"/photos\">\n                <button className=\"btn btn-dark\">All Photos</button>\n            </Link>\n\n            <Link className=\"navbar-brand nav-item\" to=\"/directory\">\n                <button className=\"btn btn-dark\">Directory</button>\n            </Link>\n\n            <Link className=\"navbar-brand nav-item\" to=\"/album\">\n                <button className=\"btn btn-dark\">Albums</button>\n            </Link>\n\n            <Link className=\"navbar-brand nav-item\" to=\"/\">\n                <button className=\"btn btn-dark\">For You :)</button>\n            </Link>\n\n        </nav>\n    );\n}\n\nexport default NavbarOptions;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nexport class FolderCard extends Component {\n    selectSubDirectory = () => {\n        const { folderData, isBackDir, addAlbum, selectSubDirectoryReducer } = this.props;\n        if (isBackDir) {\n            let prevDir = folderData.split('/')\n            prevDir = prevDir.slice(0, prevDir.length - 1).join('/');\n            selectSubDirectoryReducer(prevDir);\n            return;\n        }\n        if (addAlbum) {\n            this.props.handleShow();\n            return;\n        }\n        selectSubDirectoryReducer(folderData);\n    }\n\n    render() {\n        const { folderData } = this.props;\n        let folderName = folderData.split('/');\n        folderName = folderName[folderName.length - 1];\n        return (\n            <div className=\"card folder-card\" onClick={this.selectSubDirectory}>\n                <div className=\"card-body btn btn-dark\">\n                    <h5 className=\"card-title\">{folderName}</h5>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n});\n\n\nexport default connect(\n    mapStateToProps,\n    {\n    }\n)(FolderCard);","export const BASE_URL = 'http://localhost:8000/';","import { LOADING_ALBUM, FILE_FOLDER_IMAGES, CURRENT_DIRECTORY, ADD_ALBUM_POP, FALSE_RESPONSE, ALBUM_IMAGES, ADD_ALBUM, ALBUM_IMAGES_POP, LOADING_ALBUM_POP, CURRENT_DIRECTORY_POP, ADD_FILES, REMOVE_FILES } from './types';\nimport { BASE_URL } from './constants';\nimport axios from 'axios';\n\n\nexport const getAllImagesWithPath = () => dispatch => {\n  axios\n    .get(BASE_URL + 'api/folder')\n    .then(response =>\n      dispatch({\n        type: FILE_FOLDER_IMAGES,\n        payload: response.data\n      })\n    )\n    .catch(err => {\n      console.log(err)\n      dispatch({\n        type: FALSE_RESPONSE,\n        payload: false\n      })\n    })\n};\n\nexport const getAllAlbumsWithPathPopUp = () => dispatch => {\n  axios\n    .get(BASE_URL + 'api/album')\n    .then(response =>\n      dispatch({\n        type: ALBUM_IMAGES_POP,\n        payload: response.data\n      })\n    )\n    .catch(err => {\n      console.log(err)\n      dispatch({\n        type: FALSE_RESPONSE,\n        payload: false\n      })\n    })\n};\n\n\nexport const getAllAlbumsWithPath = () => dispatch => {\n  axios\n    .get(BASE_URL + 'api/album')\n    .then(response =>\n      dispatch({\n        type: ALBUM_IMAGES,\n        payload: response.data\n      })\n    )\n    .catch(err => {\n      console.log(err)\n      dispatch({\n        type: FALSE_RESPONSE,\n        payload: false\n      })\n    })\n};\n\nexport const addAlbumAtPath = (path, name) => dispatch => {\n  axios\n    .post(BASE_URL + 'api/album', {\n      album_name: name,\n      album_path: path,\n    })\n    .then(response =>\n      dispatch({\n        type: ADD_ALBUM,\n        payload: response.data\n      })\n    )\n    .catch(err => {\n      console.log(err)\n      dispatch({\n        type: FALSE_RESPONSE,\n        payload: false\n      })\n    })\n};\n\nexport const addAlbumAtPathPop = (path, name) => dispatch => {\n  axios\n    .post(BASE_URL + 'api/album', {\n      album_name: name,\n      album_path: path,\n    })\n    .then(response =>\n      dispatch({\n        type: ADD_ALBUM_POP,\n        payload: response.data\n      })\n    )\n    .catch(err => {\n      console.log(err)\n      dispatch({\n        type: FALSE_RESPONSE,\n        payload: false\n      })\n    })\n};\n\nexport const addFilesToAlbum = (files, path) => dispatch => {\n  axios\n    .post(BASE_URL + 'api/album/images', {\n      album_path: path,\n      file_paths: files,\n    })\n    .then(response =>\n      dispatch({\n        type: ADD_FILES,\n        payload: response.data\n      })\n    )\n    .catch(err => {\n      console.log(err)\n      dispatch({\n        type: FALSE_RESPONSE,\n        payload: false\n      })\n    })\n};\n\nexport const removeFromAlbum = (files, path) => dispatch => {\n  axios\n    .post(BASE_URL + 'api/album/images/delete', {\n      album_path: path,\n      file_paths: files,\n    })\n    .then(response =>\n      dispatch({\n        type: REMOVE_FILES,\n        payload: response.data\n      })\n    )\n    .catch(err => {\n      console.log(err)\n      dispatch({\n        type: FALSE_RESPONSE,\n        payload: false\n      })\n    })\n};\n\nexport const selectSubDirectoryGlobal = (subDir) => {\n  return {\n    type: CURRENT_DIRECTORY,\n    payload: subDir\n  }\n}\n\nexport const selectSubDirectoryGlobalPop = (subDir) => {\n  return {\n    type: CURRENT_DIRECTORY_POP,\n    payload: subDir\n  }\n}\n\n\nexport const setLoading = () => {\n  return {\n    type: LOADING_ALBUM\n  };\n};\n\nexport const setLoadingPop = () => {\n  return {\n    type: LOADING_ALBUM_POP\n  };\n};","export const SEARCH_MOVIE = 'SEARCH_MOVIE';\nexport const FETCH_IMAGES = 'FETCH_IMAGES';\nexport const LOADING_ALBUM = 'LOADING_ALBUM';\nexport const LOADING_PHOTOS = 'LOADING_PHOTOS';\nexport const FETCH_MORE_IMAGES = 'FETCH_MORE_IMAGES';\nexport const FILE_FOLDER_IMAGES = 'FILE_FOLDER_IMAGES';\nexport const CURRENT_DIRECTORY = 'CURRENT_DIRECTORY';\nexport const GALLERY_COMPONENTS = 'GALLERY_COMPONENTS';\nexport const GALLERY_CURRENT = 'GALLERY_CURRENT';\nexport const CLOSE_GALLERY_VIEW = 'CLOSE_GALLERY_VIEW';\nexport const FALSE_RESPONSE = 'FALSE_RESPONSE';\nexport const ALBUM_IMAGES = 'ALBUM_IMAGES';\nexport const ADD_ALBUM = 'ADD_ALBUM';\nexport const ALBUM_IMAGES_POP = 'ALBUM_IMAGES_POP';\nexport const LOADING_ALBUM_POP = 'LOADING_ALBUM_POP';\nexport const CURRENT_DIRECTORY_POP = 'CURRENT_DIRECTORY_POP';\nexport const ADD_ALBUM_POP = 'ADD_ALBUM_POP';\nexport const ADD_FILES = 'ADD_FILES';\nexport const REMOVE_FILES = 'REMOVE_FILES';\n\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport FolderCard from './FolderCard';\n\nimport {\n    selectSubDirectoryGlobal,\n    selectSubDirectoryGlobalPop,\n    addAlbumAtPath,\n    addAlbumAtPathPop\n} from '../../actions/directoryAction';\n\n\nexport class DirectoryContainer extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showInputModal: false,\n            err_msg: \"\"\n        }\n    }\n\n    handleClose = () => this.setState({ showInputModal: false, err_msg:\"\" });\n    handleShow = () => this.setState({ showInputModal: true });\n\n    selectSubDirectoryReducer = (dir) => {\n        if (this.props.reducerSubName === 'directory') {\n            this.props.selectSubDirectoryGlobal(dir);\n        }\n        else {\n            this.props.selectSubDirectoryGlobalPop(dir);\n        }\n    }\n\n    addAlbumAtPathReducer = (path, name) => {\n        if (this.props.reducerSubName === 'directory') {\n            this.props.addAlbumAtPath(path, name);\n        }\n        else {\n            this.props.addAlbumAtPathPop(path, name);\n        }\n    }\n\n    selectSubDirectory() {\n        this.selectSubDirectoryReducer(this.props.directory[this.props.reducerSubName].currentDir);\n        console.log(\"Clicked\");\n    }\n\n    getBackDir(currentDir) {\n        let backDir = currentDir.split('/');\n        if (backDir.length === 1) {\n            backDir = backDir[0];\n        }\n        else {\n            backDir = backDir.slice(0, backDir.length - 1).join('/');\n        }\n        backDir += '/Back'\n        return backDir;\n    }\n    \n    saveAlbum = () => {\n        const { reducerSubName} = this.props\n        const { currentDir, folder } = this.props.directory[reducerSubName];\n        if (this.albumNameValue.value.length < 1) {\n            this.setState({ err_msg: \"album name cannot be empty\" })\n        }\n        else if (folder[currentDir] !== undefined && folder[currentDir].includes(currentDir + \"/\" + this.albumNameValue.value)) {\n            this.setState({err_msg:\"album name already exists\"})\n        }\n        else {\n            this.addAlbumAtPathReducer(currentDir, this.albumNameValue.value);\n            this.handleClose();\n        }\n    }\n\n\n    getFolderPathList(currentDir) {\n        let prev = '';\n        let folerNameList = currentDir.split('/')\n        let folderPathList = folerNameList.map((folderName, i) => {\n            prev += folderName + '/'\n            return prev;\n        })\n        folderPathList = folderPathList.map((folderPath, i) => {\n            if (i !== folderPathList.length - 1) {\n                return <li\n                    key={i}\n                    className='breadcrumb-item'\n                    onClick={() => this.selectSubDirectoryReducer(folderPath.slice(0, folderPath.length - 1))}\n                ><span>{folerNameList[i]}</span></li>\n            }\n            else {\n                return <li\n                    key={i}\n                    className='breadcrumb-item active'\n                    onClick={() => this.selectSubDirectoryReducer(folderPath.slice(0, folderPath.length - 1))}\n                ><span>{folerNameList[i]}</span></li>\n            }\n        })\n        return folderPathList;\n    }\n\n    render() {\n        const { reducerSubName } = this.props;\n        const { currentDir, folder, addAlbum } = this.props.directory[reducerSubName];\n            \n        let subFolders = folder[currentDir];\n        let backDir = this.getBackDir(currentDir);\n        let folderPathList = this.getFolderPathList(currentDir);\n        let content = [<FolderCard key={'-1'} folderData={backDir} isBackDir={true} addAlbum={false} selectSubDirectoryReducer={this.selectSubDirectoryReducer}/>]\n        if (subFolders) {\n            content.push(subFolders.map((folderData, index) => (\n                <FolderCard key={index} folderData={folderData} isBackDir={false} addAlbum={false} selectSubDirectoryReducer={this.selectSubDirectoryReducer}/>\n            )))\n        }\n        if (addAlbum) {\n            let addBut = currentDir + '/Add Button';\n            content.push(\n                <FolderCard key={currentDir.length} folderData={addBut} isBackDir={false} addAlbum={true} handleShow={this.handleShow} selectSubDirectoryReducer={this.selectSubDirectoryReducer} />\n            )\n        }\n        return (\n            <div>\n                <nav className=\"breadcums-nav\">\n                    <ol className=\"breadcrumb\">\n                        {folderPathList}\n                    </ol>\n                </nav>\n                {\n                    content !== '' ?\n                        <div className='container-fluid'>\n                            <div className='row'>\n                                {content}\n                            </div>\n                        </div> : ''\n                }\n                {this.state.showInputModal ?\n                    (<div class=\"modal\" role=\"dialog\">\n                        <div class=\"modal-dialog\" role=\"document\">\n                            <div class=\"modal-content\">\n                                <div class=\"modal-body\">\n                                    <div class=\"form-group\">\n                                        <label for=\"exampleInputEmail1\">Enter Album Name</label>\n                                        <input class=\"form-control\" ref={(albumNameValue) => { this.albumNameValue = albumNameValue }} type=\"text\" placeholder=\"New Album Name\" />                                    </div>\n                                        <small id=\"emailHelp\" class=\"form-text color-red\">{this.state.err_msg}</small>\n                                </div>\n                                <div class=\"modal-footer\">\n                                    <button type=\"button\" class=\"btn btn-primary\" onClick={this.saveAlbum} >Save changes</button>\n                                    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={this.handleClose}>Close</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>) : <span />}\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    directory: state.directory,\n    // folder: state.directory.directory.folder,\n    // currentDir: state.directory.directory.currentDir,\n    // addAlbum: state.directory.directory.addAlbum,\n    // addAlbumResponse: state.directory.directory.addAlbumResponse\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        selectSubDirectoryGlobal,\n        selectSubDirectoryGlobalPop,\n        addAlbumAtPath,\n        addAlbumAtPathPop\n    }\n)(DirectoryContainer);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  setGalleryComponents\n} from '../../actions/galleryAction';\n\n\nexport class ImageCard extends Component {\n\n  showGalleryView = () => {\n    const { images, current } = this.props;\n    this.props.setGalleryComponents({\n      current: current,\n      images: images,\n      show: true\n    })\n  }\n\n  render() {\n    const { image, loadedAnotherImage, selectThisImage, selectionMode, selectedImages } = this.props;\n\n    const SelectionModeAndSelected = \"image-card selected selection-mode\"\n    const SelectionModeAndNotSelected = \"image-card selection-mode\"\n    const NoSelectionMode = \"image-card\"\n\n    return (\n      <li className=\"image-li\">\n        <img\n          className={!selectionMode ? NoSelectionMode\n            : selectedImages.includes(image) ? SelectionModeAndSelected\n            : SelectionModeAndNotSelected\n          }\n          src={\"http://localhost:8000/\" + image}\n          alt=\"\"\n          onLoad={loadedAnotherImage}\n          onError={loadedAnotherImage}\n          loading=\"lazy\"\n          onClick={() => selectionMode ? selectThisImage(image) : undefined}/>\n        {!selectionMode ? (\n          <div>\n            <div className=\"image-overlay image-overlay-left\" onClick={() => selectThisImage(image)}>\n              <span className=\"image-overlay-text\">Select</span>\n            </div>\n            <div className=\"image-overlay image-overlay-right\" onClick={this.showGalleryView}>\n              <span className=\"image-overlay-text\">Open</span>\n            </div>\n          </div>\n        ): <span/>}\n        \n      </li>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n});\n\n\nexport default connect(\n  mapStateToProps,\n  { setGalleryComponents }\n)(ImageCard);","import { GALLERY_COMPONENTS, GALLERY_CURRENT, CLOSE_GALLERY_VIEW } from './types';\n\nexport const setGalleryComponents = (payload) => {\n  return {\n    type: GALLERY_COMPONENTS,\n    payload: payload\n  }\n}\n\nexport const setCurrentValue = (current) => {\n  return {\n    type: GALLERY_CURRENT,\n    current: current\n  }\n}\n\nexport const closeGalleryView = () => {\n  return {\n    type: CLOSE_GALLERY_VIEW\n  }\n}","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport ImageCard from './ImageCard';\nimport DirectoryContainer from '../folderView/DirectoryContainer';\n\nimport {\n  setLoadingPop,\n  getAllAlbumsWithPathPopUp,\n  selectSubDirectoryGlobal,\n  addFilesToAlbum,\n  removeFromAlbum\n} from '../../actions/directoryAction';\n\nexport const imagesAtOnce = 100;\n\nexport class ImageContainer extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      imageCount: 0,\n      imagesLoaded: [],\n      loadNextOn: 0,\n      response: false,\n      selectedImages: [],\n      selectionMode: false,\n      showDirectory: false\n    }\n  }\n\n  loadedAnotherImage = () => {\n    this.setState({ imageCount: this.state.imageCount + 1 }, () => {\n      if (this.state.imageCount === this.state.loadNextOn) {\n        this.loadMoreImages();\n      }\n    });\n  }\n\n  loadMoreImages() {\n    let { imagesLoaded, loadNextOn } = this.state;\n    let { data, metadata } = this.props;\n    if (metadata.response !== 'Success') {\n      return;\n    }\n    imagesLoaded = data.slice(0, loadNextOn + imagesAtOnce);\n    this.setState({ imagesLoaded, loadNextOn: loadNextOn + imagesAtOnce });\n  }\n\n  selectThisImage = (path) => {\n    var selectedImages = this.state.selectedImages;\n    if (selectedImages.includes(path)) {\n      const index = selectedImages.indexOf(path);\n      if (index > -1) {\n        selectedImages.splice(index, 1);\n      }\n      if (selectedImages.length === 0) {\n        this.setState({ selectionMode: false, selectedImages });\n      }\n      else {\n        this.setState({ selectedImages });\n      }\n    }\n    else {\n      selectedImages.push(path);\n      this.setState({ selectedImages, selectionMode: true })\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props === nextProps) {\n      return;\n    }\n\n    let { data, metadata } = nextProps;\n    if (metadata.response !== 'Success') {\n      this.setState({ response: false });\n    }\n    else {\n      this.setState({ imageCount: 0, imagesLoaded: data.slice(0, imagesAtOnce), loadNextOn: imagesAtOnce, response: true });\n    }\n  }\n\n  componentDidMount() {\n    let { data, metadata } = this.props;\n    if (metadata.response !== 'Success') {\n      this.setState({ response: false });\n    }\n    else {\n      this.setState({ imageCount: 0, imagesLoaded: data.slice(0, imagesAtOnce), loadNextOn: imagesAtOnce, response: true });\n    }\n  }\n\n  CallAndShowDirectory = () => {\n    this.props.setLoadingPop();\n    this.props.getAllAlbumsWithPathPopUp();\n    this.setState({ showDirectory: true })\n  }\n\n  addToAlbum = () => {\n    console.log(this.state.selectedImages);\n    console.log(this.props.currentDir);\n    this.props.addFilesToAlbum(this.state.selectedImages, this.props.currentDir);\n    this.setState({ selectionMode: false, selectedImages: [], showDirectory: false })\n    \n  }\n\n  removeFiles = () => {\n    this.props.removeFromAlbum(this.state.selectedImages, this.props.currentDirAlbum);\n    this.setState({ selectionMode: false, selectedImages: [] })\n  }\n\n  render() {\n    let content = this.state.response ? this.state.imagesLoaded.map((image, index) => (\n      <ImageCard key={index}\n        image={image}\n        current={index}\n        images={this.props.data}\n        loadedAnotherImage={this.loadedAnotherImage.bind(this)}\n        selectThisImage={this.selectThisImage}\n        selectionMode={this.state.selectionMode}\n        selectedImages={this.state.selectedImages} />\n    )) : \"Content Could not be loaded :( \";\n\n    return (\n      <div>\n        <ul className=\"image-ul\">\n          {content}\n          <li className=\"image-li\"></li>\n        </ul>\n        {this.state.selectionMode ?\n          <div className=\"bottom-panel\">\n            <button className=\"btn btn-dark\" onClick={this.CallAndShowDirectory}>Add to Album</button>&nbsp;\n            {this.props.from === 'albumLanding' ?\n              <span><button className=\"btn btn-dark\" onClick={this.removeFiles}>Remove from Album</button>&nbsp;</span>:\n              <span />\n            }\n            <button className=\"btn btn-dark\" onClick={() => this.setState({ selectionMode: false, selectedImages: [] })}>Cancel</button>\n          </div>\n          : <span />}\n        {this.state.showDirectory ?\n          <div className=\"modal\">\n            <div className=\"directory-container-pop\">\n              <DirectoryContainer reducerSubName={'directory_pop'} />\n              <div className=\"bottom-panel\">\n                <button className=\"btn btn-dark\" onClick={this.addToAlbum}>Select</button>&nbsp;\n              <button className=\"btn btn-dark\" onClick={() => this.setState({ showDirectory: false })}>Cancel</button>\n              </div>\n            </div>\n          </div> : <span />}\n      </div >\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  dataLoaded: state.photos.dataLoaded,\n  currentDir: state.directory.directory_pop.currentDir,\n  currentDirAlbum: state.directory.directory.currentDir\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    setLoadingPop,\n    selectSubDirectoryGlobal,\n    getAllAlbumsWithPathPopUp,\n    addFilesToAlbum,\n    removeFromAlbum\n  }\n)(ImageContainer);","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport {\n    setLoading,\n} from '../../actions/directoryAction';\nimport ImageContainer from '../imageContainer/ImageContainer';\n\n\nexport class FileContainer extends Component {\n\n    render() {\n        const { file, currentDir } = this.props;\n        var data = file[currentDir];\n        if (!data) {\n            return (<h3>No Files Found !</h3>)\n        }\n        \n        return (\n            <div>\n                <ImageContainer data={data} metadata={{ response: \"Success\" }} from={this.props.from} />\n            </div >\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    file: state.directory.directory.file,\n    currentDir: state.directory.directory.currentDir\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setLoading,\n    }\n)(FileContainer);","import React from 'react'\nimport spinner from './loading1.gif'\n\nfunction Spinner() {\n  return (\n    <div>\n      <img\n        src={spinner}\n        style={{ width: '200px', margin: 'auto', display: 'block'}}\n        alt=\"Loading...\"\n      />\n    </div>\n  )\n}\n\nexport default Spinner\n","import React, { Component } from 'react';\n\nexport class Instructions extends Component {\n\n    render() {\n        return (\n            <div className=\"pd-4 text-white info-div\">\n                <br/>\n                <h3>Is your Django Server Running ?? Run the Django Server and refresh</h3><br /><br />\n                <h4>For help <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/shagunbandi/albumify-backend/blob/master/README.md\">Click Here</a></h4>\n            </div>\n        );\n    }\n}\n\nexport default Instructions;","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport DirectoryContainer from '../folderView/DirectoryContainer';\nimport FileContainer from '../folderView/FileContainer'\n\nimport Spinner from '../layout/Spinner';\n\nimport {\n  setLoading,\n  getAllImagesWithPath,\n  selectSubDirectoryGlobal\n} from '../../actions/directoryAction';\nimport Instructions from '../instructions';\n\n\nexport class DirectoryLanding extends Component {\n\n  componentWillMount() {\n    this.props.setLoading();\n    this.props.getAllImagesWithPath();\n  }\n\n  componentDidMount() {\n    if (this.props.location.pathname !== \"\") {\n      this.props.selectSubDirectoryGlobal(this.props.location.pathname);\n    }\n  }\n\n  render() {\n    const { loading, response } = this.props;\n    return (\n      <div className=\"bg-greyish\">\n        {\n          loading ? <Spinner /> :\n            !response ? <Instructions /> : (\n              <span>\n                <DirectoryContainer reducerSubName={'directory'} />\n                <br />\n                <FileContainer />\n              </span>\n            )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loading: state.directory.directory.loading,\n  response: state.directory.directory.response\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    setLoading,\n    selectSubDirectoryGlobal,\n    getAllImagesWithPath,\n  }\n)(DirectoryLanding);\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport ImageContainer from '../imageContainer/ImageContainer'\n\nimport Spinner from '../layout/Spinner';\n\nimport {\n    setLoading,\n    fetchImages\n} from '../../actions/photosAction';\nimport Instructions from '../instructions';\n\n\nexport class PhotosLanding extends Component {\n\n    componentDidMount() {\n        if (!this.props.dataLoaded) {\n            this.props.setLoading();\n            this.props.fetchImages();\n        }\n    }\n\n    render() {\n        const { loading, response } = this.props;\n        return (\n            <div>\n                {\n                    loading ? <Spinner /> :\n                        !response ? <Instructions /> :\n                            <ImageContainer data={this.props.images.data} metadata={this.props.images} />\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    response: state.photos.response,\n    images: state.photos.images,\n    loading: state.photos.loading,\n    dataLoaded: state.photos.dataLoaded\n});\n\nexport default connect(\n    mapStateToProps,\n    {\n        setLoading,\n        fetchImages,\n    }\n)(PhotosLanding);\n","import { LOADING_PHOTOS, FETCH_IMAGES, FALSE_RESPONSE } from './types';\nimport { BASE_URL } from './constants';\nimport axios from 'axios';\n\nexport const fetchImages = () => dispatch => {\n    axios\n        .get(BASE_URL + `api/?page=1`)\n        .then(response =>\n            dispatch({\n                type: FETCH_IMAGES,\n                payload: response.data\n            })\n        )\n        .catch(err => {\n            console.log(err)\n            dispatch({\n                type: FALSE_RESPONSE,\n                payload: false\n            })\n        })\n};\n\nexport const setLoading = () => {\n    return {\n        type: LOADING_PHOTOS\n    };\n};\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport { BASE_URL } from '../../actions/constants'\n\nimport ArrowKeysReact from 'arrow-keys-react';\n\nimport {\n  setCurrentValue,\n  closeGalleryView,\n} from '../../actions/galleryAction';\n\n\nexport class GalleryLanding extends Component {\n\n  closeGallery = (event) => {\n    event.preventDefault();\n    if (event.currentTarget === event.target) {\n      this.props.closeGalleryView();\n    }\n  }\n\n  nextImage = () => {\n    const { current, images } = this.props;\n    const next = (current + 1) % images.length;\n    this.props.setCurrentValue(next)\n  }\n\n  prevImage = () => {\n    const { current, images } = this.props;\n    const next = (current - 1 + images.length) % images.length;\n    this.props.setCurrentValue(next)\n  }\n\n  render() {\n\n    ArrowKeysReact.config({\n      left: () => {\n        this.prevImage()\n      },\n      right: () => {\n        this.nextImage();\n      }\n    });\n\n\n\n    if (!this.props.show) {\n      return null;\n    }\n\n    const { current, images } = this.props;\n\n    let imageUrl = BASE_URL + images[current];\n    let smallContent = images.map((image, index) => {\n      let imageURL = BASE_URL + image;\n      if (index === current) return (\n        <img className=\"gallery-image-small active\" key={index} src={imageURL} alt={image} loading=\"eager\" onClick={() => {\n          this.props.setCurrentValue(index);\n        }} />\n      )\n\n      return (\n        <img className=\"gallery-image-small\" key={index} src={imageURL} alt={image} onClick={() => {\n          this.props.setCurrentValue(index);\n        }} />\n      )\n    })\n\n    // let content = \"Content\";this.props.closeGalleryView()\n\n    return (\n      <div {...ArrowKeysReact.events} tabIndex=\"1\" className=\"gallery-container\" onClick={this.closeGallery}>\n        <div className='gallery-container-holder container'>\n          <div className='gallery-main-image'>\n            <div className=\"cross\">\n              <div className=\"btn btn-dark btn-gall\" onClick={() => { this.props.closeGalleryView() }}>close</div>\n              <div className=\"btn btn-dark btn-gall\" onClick={this.prevImage}>prev</div>\n              <div className=\"btn btn-dark btn-gall\" onClick={this.nextImage}>next</div>\n            </div>\n            <span class=\"helper\"></span>\n            <img src={imageUrl} className=\"gallery-image\" alt=\"\" />\n          </div>\n          <div className='gallery-small-images'>\n            {smallContent}\n          </div>\n        </div>\n      </div >\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  current: state.gallery.current,\n  images: state.gallery.images,\n  show: state.gallery.show\n});\n\nexport default connect(\n  mapStateToProps,\n  { setCurrentValue, closeGalleryView }\n)(GalleryLanding);\n","import {\n  LOADING_ALBUM,\n  FILE_FOLDER_IMAGES,\n  CURRENT_DIRECTORY,\n  FALSE_RESPONSE,\n  ALBUM_IMAGES,\n  ADD_ALBUM,\n  ALBUM_IMAGES_POP,\n  LOADING_ALBUM_POP,\n  CURRENT_DIRECTORY_POP,\n  ADD_ALBUM_POP,\n  ADD_FILES,\n  REMOVE_FILES\n} from '../actions/types';\n\nconst initialState = {\n  directory: {\n    text: '',\n    loading: true,\n    images: {},\n    imageCount: 0,\n    folder: {},\n    file: {},\n    rootDir: '',\n    currentDir: '',\n    response: true,\n    addAlbum: false,\n    addAlbumResponse: false\n  },\n  directory_pop: {\n    text: '',\n    loading: true,\n    images: {},\n    imageCount: 0,\n    folder: {},\n    file: {},\n    rootDir: '',\n    currentDir: '',\n    response: true,\n    addAlbum: false,\n    addAlbumResponse: false\n  }\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n\n    case FALSE_RESPONSE:\n      return {\n        ...state,\n        directory: {\n          ...state.directory,\n          response: false,\n          loading: false\n        },\n        directory_pop: { ...state.directory_pop },\n      }\n\n    case CURRENT_DIRECTORY:\n      return {\n        ...state,\n        directory: {\n          ...state.directory,\n          currentDir: action.payload\n        },\n        directory_pop: { ...state.directory_pop },\n      }\n\n    case CURRENT_DIRECTORY_POP:\n      return {\n        ...state,\n        directory: {\n          ...state.directory,\n        },\n        directory_pop: {\n          ...state.directory_pop,\n          currentDir: action.payload\n        },\n      }\n\n    case FILE_FOLDER_IMAGES:\n      return {\n        ...state,\n        directory: {\n          ...state.directory,\n          response: \"Success\",\n          folder: action.payload.data.folder,\n          file: action.payload.data.file,\n          rootDir: action.payload.data.root,\n          currentDir: action.payload.data.root,\n          loading: false,\n          addAlbum: false\n        },\n        directory_pop: { ...state.directory_pop },\n      }\n    \n    case ADD_FILES:\n      return {\n        ...state,\n      }\n    \n    // case REMOVE_FILES:\n\n\n    case ADD_ALBUM:\n      if (action.payload.response === \"Success\") {\n\n        return {\n          ...state,\n          directory: {\n            ...state.directory,\n            addAlbumResponse: \"Success\",\n            folder: action.payload.data.folder,\n            file: action.payload.data.file,\n            rootDir: action.payload.data.root,\n            currentDir: action.payload.current_directory,\n            loading: false,\n            addAlbum: true\n          },\n          directory_pop: { ...state.directory_pop },\n        }\n      }\n      return {\n        ...state,\n        directory: {\n          ...state.directory,\n          addAlbumResponse: \"Fail\",\n          message: action.payload.response.message\n        },\n        directory_pop: { ...state.directory_pop },\n      }\n    \n    case ADD_ALBUM_POP:\n      if (action.payload.response === \"Success\") {\n\n        return {\n          ...state,\n          directory: {\n            ...state.directory,\n          },\n          directory_pop: {\n            ...state.directory_pop,\n            addAlbumResponse: \"Success\",\n            folder: action.payload.data.folder,\n            file: action.payload.data.file,\n            rootDir: action.payload.data.root,\n            currentDir: action.payload.current_directory,\n            loading: false,\n            addAlbum: true\n          },\n        }\n      }\n      return {\n        ...state,\n        directory: {\n          ...state.directory,\n        },\n        directory_pop: {\n          ...state.directory_pop,\n          addAlbumResponse: \"Fail\",\n          message: action.payload.response.message\n        },\n      }\n\n    case ALBUM_IMAGES_POP:\n      return {\n        ...state,\n        directory: {\n          ...state.directory\n        },\n        directory_pop: {\n          ...state.directory_pop,\n          response: \"Success\",\n          folder: action.payload.data.folder,\n          file: action.payload.data.file,\n          rootDir: action.payload.data.root,\n          currentDir: action.payload.data.root,\n          loading: false,\n          addAlbum: true\n        },\n      }\n    \n    case REMOVE_FILES:\n      return {\n        ...state,\n        directory: {\n          ...state.directory,\n          response: \"Success\",\n          folder: action.payload.data.folder,\n          file: action.payload.data.file,\n          rootDir: action.payload.data.root,\n          loading: false,\n          addAlbum: true\n        },\n        directory_pop: { ...state.directory_pop },\n      }\n\n    case ALBUM_IMAGES:\n      return {\n        ...state,\n        directory: {\n          ...state.directory,\n          response: \"Success\",\n          folder: action.payload.data.folder,\n          file: action.payload.data.file,\n          rootDir: action.payload.data.root,\n          currentDir: action.payload.data.root,\n          loading: false,\n          addAlbum: true\n        },\n        directory_pop: { ...state.directory_pop },\n      }\n\n    case LOADING_ALBUM:\n      return {\n        ...state,\n        directory: {\n          ...state.directory,\n          loading: true\n        },\n        directory_pop: { ...state.directory_pop },\n      }\n\n    case LOADING_ALBUM_POP:\n      return {\n        ...state,\n        directory: {\n          ...state.directory,\n        },\n        directory_pop: {\n          ...state.directory_pop,\n          loading: true\n        },\n      }\n\n    default:\n      return state;\n  }\n}\n","import {\n    FETCH_IMAGES,\n    LOADING_PHOTOS,\n    FALSE_RESPONSE,\n} from '../actions/types';\n\nconst initialState = {\n    loading: true,\n    images: {},\n    dataLoaded: false,\n    response: true\n};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n\n        case FALSE_RESPONSE:\n            return {\n                ...state,\n                response: false,\n                loading: false\n            }\n\n\n        case FETCH_IMAGES:\n            console.log(\"Images Fetched\")\n            return {\n                ...state,\n                images: action.payload,\n                loading: false,\n                dataLoaded: true\n            };\n\n        case LOADING_PHOTOS:\n            return {\n                ...state,\n                loading: true\n            };\n\n        default:\n            return state;\n    }\n}\n","import {\n  GALLERY_COMPONENTS, GALLERY_CURRENT, CLOSE_GALLERY_VIEW\n} from '../actions/types';\n\nconst initialState = {\n  current: null,\n  show: false,\n  images: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n\n    case GALLERY_CURRENT:\n      return {\n        ...state,\n        current: action.current\n      }\n\n    case CLOSE_GALLERY_VIEW:\n      return {\n        current: null,\n        show: false,\n        images: []\n      }\n\n    case GALLERY_COMPONENTS:\n      return {\n        current: action.payload.current,\n        show: action.payload.show,\n        images: action.payload.images\n      }\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport directoryReducer from './directoryReducer';\nimport photosReducer from './photosReducer';\nimport galleryReducer from './galleryReducer';\n\nexport default combineReducers({\n  directory: directoryReducer,\n  photos: photosReducer,\n  gallery: galleryReducer\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport rootReducer from './reducers';\n\nconst middleware = [thunk];\nconst initialState = {};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport DirectoryContainer from '../folderView/DirectoryContainer';\nimport FileContainer from '../folderView/FileContainer'\n\nimport Spinner from '../layout/Spinner';\n\nimport {\n  setLoading,\n  getAllAlbumsWithPath,\n  selectSubDirectoryGlobal\n} from '../../actions/directoryAction';\nimport Instructions from '../instructions';\n\n\nexport class AlbumLanding extends Component {\n\n  componentWillMount() {\n    this.props.setLoading();\n    this.props.getAllAlbumsWithPath();\n  }\n\n  componentDidMount() {\n    if (this.props.location.pathname !== \"\") {\n      this.props.selectSubDirectoryGlobal(this.props.location.pathname);\n    }\n  }\n\n  render() {\n    const { loading, response } = this.props;\n    return (\n      <div className=\"bg-greyish\">\n        {\n          loading ? <Spinner /> :\n            !response ? <Instructions /> : (\n              <span>\n                <DirectoryContainer reducerSubName={'directory'}/>\n                <br />\n                <FileContainer from={'albumLanding'}/>\n              </span>\n            )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loading: state.directory.directory.loading,\n  response: state.directory.directory.response\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    setLoading,\n    selectSubDirectoryGlobal,\n    getAllAlbumsWithPath,\n  }\n)(AlbumLanding);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\nimport './stylesheet/App.css';\n\nimport Navbar from './components/layout/Navbar';\nimport NavBarOptions from './components/layout/NavBarOptions'\n\nimport DirectoryLanding from './components/directory/DirectoryLanding';\nimport PhotosLanding from './components/photos/PhotosLanding';\nimport GalleryLanding from './components/galleryView/GalleryLanding';\nimport store from './store';\nimport AlbumLanding from './components/album/AlbumLanding';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"black-bg\">\n            <Navbar />\n            <NavBarOptions />\n            <GalleryLanding />\n            <Route path=\"/directory\" component={DirectoryLanding} />\n            <Route path=\"/album\" component={AlbumLanding} />\n            <Route path='/photos' component={PhotosLanding} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}